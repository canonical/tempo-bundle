# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-bundle

[vars]
tst_path = {toxinidir}/tests/
all_path = {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}
  PYTHONBREAKPOINT=ipdb.set_trace
passenv =
  PYTHONPATH
  HOME
  PATH
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}
    ruff check {[vars]all_path} --fix

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-integration]
description = Run static analysis checks
setenv =
    MYPYPATH = {[vars]tst_path}/integration
deps =
    mypy
    pytest
    pytest-operator
    juju
    types-setuptools
    types-toml
    {[testenv:integration]deps}
commands =
    mypy {[vars]tst_path}/integration

[testenv:integration]
description = Run integration tests
deps =
    jinja2
    git+https://github.com/juju/python-libjuju.git
    #juju
    pluggy
    pytest
    git+https://github.com/charmed-kubernetes/pytest-operator.git
commands =
    pytest -v --tb native --log-cli-level=INFO -s {toxinidir}/tests/integration/ {posargs} --mode=scaling-monolithic
    pytest -v --tb native --log-cli-level=INFO -s {toxinidir}/tests/integration/ {posargs} --mode=minimal-microservices
    pytest -v --tb native --log-cli-level=INFO -s {toxinidir}/tests/integration/ {posargs} --mode=recommended-microservices

[testenv:render-bundle]
description = Render the bundle from template
deps =
    git+https://github.com/canonical/observability.git@o11y-bundles
commands =
    render-bundle --template {toxinidir}/bundle.yaml.j2 --output {toxinidir}/bundle.yaml {posargs}
