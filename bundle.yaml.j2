---
bundle: kubernetes
name: tempo-bundle
description: >
  Tempo is a distributed tracing backend by Grafana, supporting Jaeger, Zipkin, and OpenTelemetry protocols.

website: https://github.com/canonical/tempo-bundle
issues: https://github.com/canonical/tempo-bundle/issues

applications:
  tempo:
    charm: tempo-coordinator-k8s
    channel: {{ channel|default('edge', true) }}
    scale: 1
    trust: true
    constraints: arch=amd64
  s3-integrator:
    charm: s3-integrator
    scale: 1
    channel: {{ channel|default('edge', true) }}
  {%- if mode is undefined or (mode is defined and mode != 'minimal-microservices' and mode != 'recommended-microservices') %}
  tempo-worker:
    charm: tempo-worker-k8s
    channel: {{ channel|default('edge', true) }}
    scale: 3
    options:
      role: "all"
    constraints: arch=amd64
    trust: true
    resources:
      tempo-image: "docker.io/ubuntu/tempo:2-22.04"
  {%- endif %}
  {%- if mode is defined and (mode == 'minimal-microservices' or mode == 'recommended-microservices') %}
      {%- set roles = ["querier", "query-frontend", "ingester", "distributor", "compactor", "metrics-generator"] %}
      {%- for role in roles %}
  tempo-worker-{{ role }}:
    charm: tempo-worker-k8s
    channel: {{ channel|default('edge', true) }}
    scale: 1
    options:
      role: "{{ role }}"
    constraints: arch=amd64
    trust: true
    resources:
      tempo-image: "docker.io/ubuntu/tempo:2-22.04"
      {%- endfor %}
  {%- endif %}

relations:
- - tempo:s3
  - s3-integrator:s3-credentials
{%- if mode is undefined or (mode is defined and mode != 'minimal-microservices' and mode != 'recommended-microservices') %}
- - tempo:tempo-cluster
  - tempo-worker:tempo-cluster
{%- endif %}
{%- if mode is defined and (mode == 'minimal-microservices' or mode == 'recommended-microservices') %}
  {%- for role in roles %}
- - tempo:tempo-cluster
  - tempo-worker-{{ role }}:tempo-cluster
  {%- endfor %}
{%- endif %}
